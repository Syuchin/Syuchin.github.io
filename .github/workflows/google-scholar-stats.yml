name: Update Google Scholar Stats

on:
  schedule:
    # 在UTC时间的深夜/凌晨运行，避开工作时间
    - cron: '0 2 */3 * *'   # 每三天在中国时间 10:00 (UTC+8) 运行
    - cron: '30 18 */5 * *' # 每五天在中国时间 02:30 (UTC+8) 运行 (备用时间)
  workflow_dispatch: 
  push:
    branches:
      - main

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 添加写入权限
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 PySocks

      - name: Set up Go (for proxy client)
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install mihomo (Clash) proxy client
        run: |
          go install github.com/metacubex/mihomo@latest

      - name: Generate proxy client config
        env:
          CLASH_CONFIG: ${{ secrets.CLASH_CONFIG }}
          CLASH_NODE_SS: ${{ secrets.CLASH_NODE_SS }}
          CLASH_NODE_VMESS1: ${{ secrets.CLASH_NODE_VMESS1 }}
          CLASH_NODE_VMESS2: ${{ secrets.CLASH_NODE_VMESS2 }}
          SS1_SERVER: ${{ secrets.SS1_SERVER }}
          SS1_PORT: ${{ secrets.SS1_PORT }}
          SS1_PASSWORD: ${{ secrets.SS1_PASSWORD }}
          VMESS1_SERVER: ${{ secrets.VMESS1_SERVER }}
          VMESS1_PORT: ${{ secrets.VMESS1_PORT }}
          VMESS1_UUID: ${{ secrets.VMESS1_UUID }}
          VMESS2_SERVER: ${{ secrets.VMESS2_SERVER }}
          VMESS2_PORT: ${{ secrets.VMESS2_PORT }}
          VMESS2_UUID: ${{ secrets.VMESS2_UUID }}
        run: |
          if [ -n "$CLASH_CONFIG" ]; then
            printf "%s\n" "$CLASH_CONFIG" > clash.yaml
          else
            # Header
            cat > clash.yaml <<'EOF'
            mixed-port: 7890
            allow-lan: true
            mode: Rule
            log-level: info
            proxies:
            EOF

            # Option A: three simplified secrets with full YAML proxy entries
            if [ -n "$CLASH_NODE_SS" ]; then
              printf "%s\n" "$CLASH_NODE_SS" >> clash.yaml
            fi
            if [ -n "$CLASH_NODE_VMESS1" ]; then
              printf "%s\n" "$CLASH_NODE_VMESS1" >> clash.yaml
            fi
            if [ -n "$CLASH_NODE_VMESS2" ]; then
              printf "%s\n" "$CLASH_NODE_VMESS2" >> clash.yaml
            fi

            # Option B: fall back to per-field secrets (if provided)
            if [ -n "$SS1_SERVER" ] && [ -n "$SS1_PORT" ] && [ -n "$SS1_PASSWORD" ]; then
              cat >> clash.yaml <<EOF
              - name: Lite-家庭宽带-香港HGC-1X-SS
                type: ss
                server: $SS1_SERVER
                port: $SS1_PORT
                cipher: chacha20-ietf-poly1305
                password: $SS1_PASSWORD
                udp: true
          EOF
            fi
            if [ -n "$VMESS1_SERVER" ] && [ -n "$VMESS1_PORT" ] && [ -n "$VMESS1_UUID" ]; then
              cat >> clash.yaml <<EOF
              - name: Pro-家庭宽带-香港HKBN-1X-VMESS
                type: vmess
                server: $VMESS1_SERVER
                port: $VMESS1_PORT
                uuid: $VMESS1_UUID
                alterId: 0
                cipher: auto
                udp: true
          EOF
            fi
            if [ -n "$VMESS2_SERVER" ] && [ -n "$VMESS2_PORT" ] && [ -n "$VMESS2_UUID" ]; then
              cat >> clash.yaml <<EOF
              - name: Pro-家庭宽带-香港CMHK-1X-VMESS
                type: vmess
                server: $VMESS2_SERVER
                port: $VMESS2_PORT
                uuid: $VMESS2_UUID
                alterId: 0
                cipher: auto
                udp: true
          EOF
            fi

            # Footer
            cat >> clash.yaml <<'EOF'
            proxy-groups:
              - name: Proxy
                type: fallback
                proxies:
                  - Lite-家庭宽带-香港HGC-1X-SS
                  - Pro-家庭宽带-香港HKBN-1X-VMESS
                  - Pro-家庭宽带-香港CMHK-1X-VMESS
                url: http://www.gstatic.com/generate_204
                interval: 120
            rules:
              - MATCH, Proxy
            EOF
          fi

      - name: Start proxy client
        run: |
          nohup $HOME/go/bin/mihomo -f clash.yaml >/dev/null 2>&1 &
          sleep 3
          # 简单连通性测试，不阻塞后续步骤
          curl -x http://127.0.0.1:7890 -I https://scholar.google.com/robots.txt || true
          
      - name: Create data directory
        run: |
          mkdir -p data
          
      # - name: Test citation stats script
      #   run: |
      #     TEST_MODE=1 python .github/scripts/update_citations.py
      #   env:
      #     GOOGLE_SCHOLAR_ID: ${{ secrets.GOOGLE_SCHOLAR_ID }}
          
      - name: Update citation stats
        run: python .github/scripts/update_citations.py
        env:
          GOOGLE_SCHOLAR_ID: ${{ secrets.GOOGLE_SCHOLAR_ID }}
          PROXY_LIST: http://127.0.0.1:7890
          HTTP_PROXY: http://127.0.0.1:7890
          HTTPS_PROXY: http://127.0.0.1:7890
        continue-on-error: true  # 即使失败也继续执行
        
      - name: Commit and push if changed
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add -A
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update Google Scholar stats" && git push)
